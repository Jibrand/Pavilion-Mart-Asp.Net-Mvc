<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BAIBAf/Z
</value>
  </data>
</root>